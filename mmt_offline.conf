#This is the configuration file for MMT Probe

input-mode   = "offline"
license_file_path = "/opt/mmt/mmt_bin/License_key.key"

#indicates the file name where the log messages will be written to
logfile = "/opt/mmt/mmt_log/log.data"	#default is "log.data" in the running folder

#indicates where the traffic reports will be dumped in the file
output 
{ 
    enable = 1
    data-file   = "dataoutput.csv"      #report name for traffic data
    location = "/opt/mmt/mmt_results/reports_offline/"
    sampled_report = 1 # set to 1 if you need sampled report or 0 if you need a single report
}

#input-source = "test_files/bigFlows.pcap"
input-source = "/home/montimage/Desktop/new/mmt-probe/bitdash.pcap"

# All the sections below are optional and can be enable or disable according to the requirements, sections available are 
#thread configuration (default 1 thread),security, behaviour, ftp reconstruction,redis output,radius output, data-output, 
#event based reporting,micro-flows reporting, condition based reporting, stats-period (default 5 seconds), file-output-period (default 5 seconds)

# indicates the threads configuartion options

thread-nb    = 4	#this is the number of threads MMT will use for processing packets. Must be positive and power of 2.
thread-queue = 0 	#this is the maxixum number of packets queued for processing that a single thread accepts. 
					#0 means unlimited (will always be limited by the system memory)
					#If a packet is dispatched for a thread with a full queue the packet will be dropped and reported in MMT statistics
thread-data  = 0 	#this is the maxixum amount of data queued for processing that a single thread accepts. 
					#0 means unlimited (will always be limited by the system memory)
					#If a packet is dispatched for a thread with full data the packet will be dropped and reported in MMT statistics

#indicates mmt_security input and output
security
{       
    enable  = 0        #Set to 1 to perform security analysis, 0 to disable it
    #Indicates the format of the output result. 
    id = 10
    results-dir  = "/opt/mmt/mmt_results/security_reports_online"                  #folder where detected breaches will be reported
    properties-file   = "test_files/properties_acdc.xml"  #file containing security properties and rules
}

#indicates behaviour analysis
behaviour
{
    enable  = 1                  #Set to 1 to perform behaviour analysis, zero to disable it
    location = "/opt/mmt/mmt_results/behaviour_reports_online/"  # location to store the output
}
# indicates ftp data reconstruction

reconstruct-ftp
{
    enable= 1 #Set to 1 to reconstruct ftp, 0 to disable it
    #Indicates the format of the output result. 
    id = 30
    location  = "/opt/mmt/"
}
# indicates redis output
redis-output
{
	hostname = "localhost" #hostname of redis server
    port = 6379 # port number of redis server
    enabled = 0 #set to zero to disable publishing to redis, non zero to enable publishing to redis	
}

#indicates the strategy for RADIUS reporting
radius-output
{
    enable = 0
	include-msg = 0         				#Indicates the message we want to report. 
                                            #   Set to n = 0 in order to report all messages (ANY).
                                            #   Set to n > 0 to indicate the message (1 = include-msg, 2 = include-condition)
	include-condition = 0            		#Indicates the condition to be met in order to report a msg.
											#   Set to n = 1 (IP-MSISDN) indicates report if IP to MSISDN mapping is present. 
											#   This is the only supported condition for this version. 
											#   Set to n = 0 (NONE) to skip the condition.

}

data-output
{
	include-user-agent = 32 	#Indicates the threshold in terms of data volume for parsing the user agent in Web traffic.
					#The value is in KiloBytes. If the value is zero it indicates to always parse the user agent.
					#To disable the user agent parsing set the threshold to a negative value (-1)

}

#Specifies the criteria to consider a flow as micro flow
micro-flows 
{ 
    enable=1
	include-packet-count = 0      #packets count threshold to include as micro flow
	include-byte-count   = 0    #data volume threshold in KB to include as micro flow
	report-packet-count  = 10000   #packets count threshold to report micro flows aggregated statistics
	report-byte-count    = 5000 #data volume threshold in KB to report micro flows aggregated statistics
	report-flow-count    = 10    #flows count threshold to report micro flows aggregated statistics
}
# indicates event based reporting
event_report report1
{ 
    enable = 0
    #Indicates the format of the output result 
    id = 1000
    #Indicates the event 
    event = "arp.ar_sha"
    #Indicates the list of attributes that are reported when a event is triggered.
    attributes = {"arp.ar_hln", "arp.ar_pln"}   
}
# indicates condition based reporting and registering handlers from configuration file

condition_report report_web
{
     enable = 1     
    #Indicates the format of the output result. 
     id = 1
    #Indicates the event. 
     condition = "WEB"     
    #Indicates the list of attributes that are reported when a event is triggered.
     attributes = {"http.method","http.response","http.content_type","http.host","http.user_agent","http.referer","http.xcdn_seen"}
     handlers ={"http_method_handle","http_response_handle","mime_handle","host_handle","useragent_handle","referer_handle","xcdn_seen_handle"}   
}
condition_report report_ftp //under review
{
     enable = 1     
    #Indicates the format of the output result. 
     id = 4
    #Indicates the event. 
     condition = "FTP"     
    #Indicates the list of attributes that are reported when a event is triggered.
     attributes = {"ftp.data_direction","ftp.p_payload","ftp.packet_type","ftp.packet_payload_len", "ftp.data_type", "ftp.file_name","ftp.packet_request", "ftp.packet_request_parameter", "ftp.packet_response_code","ftp.packet_reponse_value","ftp.transfer_type","ftp.ftp_session_mode", "ftp.data_direction","ftp.file_last_modified","ftp.session_connection_type","ftp.user_name","ftp.password","ftp.last_command","ftp.last_response_code","ftp.file_size"}
     handlers ={"ftp_data_direction_handle","NULL","NULL","NULL","NULL","ftp_file_name_handle","ftp_packet_request_handle","NULL","NULL","ftp_response_value_handle","NULL","NULL","NULL","NULL","ftp_session_connection_type_handle","ftp_user_name_handle","ftp_password_handle","NULL", "ftp_response_code_handle","ftp_file_size_handle"}   
}
condition_report report_rtp
{
     enable = 1     
    #Indicates the format of the output result. 
     id = 3
    #Indicates the event. 
     condition = "RTP"     
    #Indicates the list of attributes that are reported when a event is triggered.
     attributes = {"rtp.version","rtp.jitter","rtp.loss","rtp.order_err","rtp.burst_loss"}
     handlers ={"rtp_version_handle","rtp_jitter_handle","rtp_loss_handle","rtp_order_error_handle","rtp_burst_loss_handle"}   
}
condition_report report_ssl
{
     enable = 1     
    #Indicates the format of the output result. 
     id = 2
    #Indicates the event. 
     condition = "SSL"     
    #Indicates the list of attributes that are reported when a event is triggered.
     attributes = {"ssl.server_name"}
     handlers ={"ssl_server_name_handle"}   
}
#if 1 enable the protocol statics
enable-proto-without-session-stat = 1
#indicates the periodicity for reporting protocol statistics
stats-period = 5 #period in seconds
#indicates the periodicity for reporting output file period
file-output-period =5 #sampled reporting 
