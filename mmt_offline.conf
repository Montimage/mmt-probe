#This is the configuration file for MMT Probe

thread-nb    = 1	#this is the number of threads MMT will use for processing packets. Must be positive and power of 2.
thread-queue = 0 	#this is the maxixum number of packets queued for processing that a single thread accepts. 
					#0 means unlimited (will always be limited by the system memory)
					#If a packet is dispatched for a thread with a full queue the packet will be dropped and reported in MMT statistics
thread-data  = 0 	#this is the maxixum amount of data queued for processing that a single thread accepts. 
					#0 means unlimited (will always be limited by the system memory)
					#If a packet is dispatched for a thread with full data the packet will be dropped and reported in MMT statistics

#for offline analysis
input-mode   = "offline"

input-source = "test_files/p1p1_03.pcap"

#uncomment for offline continuous mode analysis
#input-mode   = "offline_cont"    #Offline continuous analysis
#input-source = "/home/bw/traces" #path to the folder where the trace file index will be stored

#uncomment for online analysis
#input-mode   = "online"
#input-source = "eth0"
#probe-id-number = 123

#indicates the file name where the log messages will be written to
logfile = "log.data"	#default is "log.data" in the running folder

#Specifies the criteria to consider a flow as micro flow
micro-flows 
{
	include-packet-count = 0      #packets count threshold to include as micro flow
	include-byte-count   = 0    #data volume threshold in KB to include as micro flow
	report-packet-count  = 10000   #packets count threshold to report micro flows aggregated statistics
	report-byte-count    = 5000 #data volume threshold in KB to report micro flows aggregated statistics
	report-flow-count    = 10    #flows count threshold to report micro flows aggregated statistics
}

#indicates mmt_security input and output
security
{
        results-dir  = "results"                  #folder where detected breaches will be reported
        properties-file   = "test_files/properties_acdc.xml"  #file containing security properties and rules
}

#indicates where the traffic reports will be dumped
output 
{
	    #data-file   = "/home/jeevan/mmt-probe/output"      #report name for traffic data
        data-file   = "dataoutput-2.csv"      #report name for traffic data
        radius-file = "" #report name for RADIUS signalling. An empty string means combine with data output.
	    #radius-file = "radius-output.csv" #report name for RADIUS signalling
	    location = "/home/jeevan/Desktop/output/"
}

#indicates the strategy for RADIUS reporting
radius-output
{
	include-msg = "acct-req"				#Indicates the message we want to report. Set it to ANY in order to report all messages.
	include-condition = "IP-MSISDN" 		#Indicates the condition to be met in order to report a msg.
											#"IP-MSISDN" indicates report if IP to MSISDN mapping is present. This is the only
											#supported condition for this version. Set this option to "NONE" or "" (empty) to skip the condition.

}

redis-output
{
        hostname = "localhost" #hostname of redis server
        port = 6379 # port number of redis server
        enabled = 1 #set to zero to disable publishing to redis, non zero to enable publishing to redis 
}

data-output
{
	include-user-agent = 32 	#Indicates the threshold in terms of data volume for parsing the user agent in Web traffic.
					#The value is in KiloBytes. If the value is zero it indicates to always parse the user agent.
					#To disable the user agent parsing set the threshold to a negative value (-1)

}

event_report report1
{
    #Indicates the format of the output result. 
    id = 1000
    #Indicates the event. 
    event = "http.referer"
    #Indicates the list of attributes that are reported when a event is triggered.
    attributes = {"http.method", "http.host"}   
}

condition_report report2
{
    #Indicates the format of the output result. 
     id = 1002
    #Indicates the event. 
     condition = "FTP"
     location  = "/home/jeevan/Desktop/"
    #Indicates the list of attributes that are reported when a event is triggered.
     attributes = {"ftp.data_direction","ftp.p_payload","ftp.packet_type","ftp.packet_payload_len", "ftp.data_type", "ftp.file_name","ftp.packet_request", "ftp.packet_request_parameter", "ftp.packet_response_code","ftp.packet_reponse_value","ftp.transfer_type","ftp.ftp_session_mode", "ftp.data_direction","ftp.file_last_modified","ftp.session_connection_type","ftp.user_name","ftp.password","ftp.last_command","ftp.last_response_code","ftp.file_size"}
     handlers ={"ftp_data_direction_handle","NULL","NULL","NULL","NULL","ftp_file_name_handle","ftp_packet_request_handle","NULL","NULL","ftp_response_value_handle","NULL","NULL","NULL","NULL","ftp_session_connection_type_handle","ftp_user_name_handle","ftp_password_handle","NULL", "ftp_response_code_handle","ftp_file_size_handle"}   
}

#indicates the periodicity for reporting protocol statistics
stats-period = 0 #period in seconds
file-output-period =5 #sampled reporting in seconds

