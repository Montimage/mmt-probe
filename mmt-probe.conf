# This is the configuration file for MMT Probe

# the unique identifier given to the probe
probe-id = 3

# folder where the license key exists
license = "/opt/mmt/probe/bin/license.key"

input {
	# in case for PCAP the input mode can be online or offline, however for DPDK its only online
	mode   = "online"
	# input source for PCAP online mode (interface name) and for offline mode (pcap name), however for DPDK its interface port number
	source = "0"
	# maximal size of a packet
	snap-len = 0        # 0 means default value 65535, apparently what tcpdump uses for -s 0 (only for PCAP)
}


# Indicates where the traffic reports will be dumped ( CSV file )
file-output
{ 
    enable = true  # set to zero to disable file output ( CSV ) , 1 to enable 
    output-file  = "data.csv"      # file name where the reports will be dumped :
    output-dir = "/opt/mmt/probe/result/report/online/" # Location where files are written :
    #output-dir = "/media/sf_share_vbox/csv/" # Location where files are written :
    retain-files  = 500   # retains the last x sampled files, 
    					 # set to 0 to retain all files ( note that the value of retain-files must be greater than the value of thread_nb + 1) :
    period = 5 # indicates the periodicity for reporting output file :
                      # Set to x if one needs a sampled file every x seconds or
					  #       0 if one needs a single file
}

# Indicates where the traffic reports will be dumped ( CSV file )
dump-pcap
{ 
    enable     = false   # set to true/false to enable/disable dumping packet 
    #output-dir = "/opt/mmt/probe/" # Location where files will be located
    output-dir = "/tmp/" # Location where files will be located
    protocols  = {"unknown"} # List of protocols which will be dumped
    period     = 0 # New files (pcap) are created every time seconds. 0 means default value 3600 seconds
    retain-files = 10   # retains the last x sampled files, 
    snap-len = 65355
}

# indicates REDIS output r :
redis-output
{
    enable = false # set to 0 to disable publishing to REDIS , 1 to enable
				# publishing to REDIS :
    hostname = "localhost" # hostname of REDIS server :
    port = 6379 # port number of REDIS server :
}

# indicates KAFKA output :
kafka-output
{
    enable = false # set to zero to disable publishing to KAFKA , 1 to enable
				# publishing to KAFKA :
    hostname = "localhost" # hostname of KAFKA server :
    port = 9092 # port number of KAFKA server :
}

mongodb-output{
	enable = true
	hostname = "localhost"
	port = 27017
	database = "mmt-data"
	collection = "reports"
	
	#limit size (bytes) of collection
	# - set 0 to unlimit
	# - if the collection reaches one of the limit, the oldest reports will be removed to maintain the limit
	limit-size = 0
}

#output format: either JSON or CSV
output-format = CSV

# All the sections below are optional and can be enable or disable according to the requirements.
#thread configuration (default 1 thread), stats-period (default 5 seconds), file-output-period (default 5 seconds)

# indicates the threads configuration options
thread-nb    = 1    # this is the number of threads MMT will use for processing packets.
                    #0: use only one thread to read then process packets
                    #1: use one thread to process packets, another to read packets
thread-queue = 65256 #4194304 #8388608 # 4194304 # this is the maximum number of packets queued for processing that a single thread accepts (only for PCAP). 
		    # 0 means MMT decides how many packets to queue (default =1000)
		    # If a packet is dispatched for a thread with a full queue the packet will be dropped and reported in MMT statistics

	

dynamic-config {
	enable = false
	descriptor = "/opt/mmt/probe/dynamic-config"
}

#smp-security
security
{
	enable        = false
	thread-nb     = 1	# the number of security threads per one probe thread , e .g . , if we have 16 probe threads and thread - nb = x ,
				# then x *16 security threads will be used .
				# If set to zero this means that the security analysis will be done in the same threads used by the probe .	
	exclude-rules = "" 	# Range of rules to be excluded from the verification
	rules-mask    = "(1:1,2,9)"	# Mapping of rules to the security threads:
		 	 	 	 	# Format: rules-mask = (thread-index:rule-range);
		 	 	 	 	# thread-index = a number greater than 0
		 	 	 	 	# rule-range = number greater than 0, or a range of numbers greater than 0.
						# Example : If we have thread-nb = 3 and "(1:1 ,2 ,4 -6)(2:3) " ,
						# this means that :
						# thread 1 verifies rules 1 ,2 ,4 ,5 ,6;
						# thread 2 verifies only rule 3; and
						# thread 3 verifies the rest
													
    output-channel = {} # Reports are sent to the output channels . The default value is a file .
			# More than one output channel is possible . In this case , the value should be a set of comma - separated values ; for example : { redis , kafka , file, mongodb}.
			# Reports are sent to output channels only when the global parameters are enable ( file-output.enable = true ,redis-output.enable = true , kafka-output.enable = true, mongodb-output.enable = true)
}
# CPU and memory usage monitor					
system-report
{   enable = true # set to 1 to perform cpu-mem reporting , 0 to disable it :
	period = 5
    output-channel = {} # Reports are sent to the output channels . The default value is a file .
			# More than one output channel is possible . In this case , the value should be a set of comma - separated values ; for example : { redis , kafka , file, mongodb}.
			# Reports are sent to output channels only when the global parameters are enable ( file-output.enable = true ,redis-output.enable = true , kafka-output.enable = true, mongodb-output.enable = true)
}

#indicates behaviour analysis
behaviour
{
    enable  = false  # set to 1 to enable , 0 to disable :
    output-dir = "/opt/mmt/probe/result/behaviour/online/"  # Folder to write the output :
}

# Indicates that FTP data reconstruction should be done .
# To enable the reconstruction , also enable the options session-report.enable and session-report.ftp_report.enable
reconstruct-data ftp
{  	
    enable = false
    output-dir  = "/opt/mmt/" # indicates the folder where the output file is created :
    output-channel = {} # Reports are sent to the output channels . The default value is a file .
			# More than one output channel is possible . In this case , the value should be a set of comma - separated values ; for example : { redis , kafka , file, mongodb}.
			# Reports are sent to output channels only when the global parameters are enable ( file-output.enable = true ,redis-output.enable = true , kafka-output.enable = true, mongodb-output.enable = true)
}

# set reconstruct_http.enable = 1 and session-report.enable = 1 for http_reconstruction
reconstruct-data http
{
     enable = false    
     output-dir = "" # location where the files are reconstructed .
     output-channel = {}
     # Indicates the list of attributes .
     #attributes = {"tcp.payload_len", "tcp.p_payload", "http.msg_start", "http.header", "http.headers_end", "http.data", "http.msg_end", "http.method", "http.response","http.content_type","http.uri"}
     # Indicates the list of handlers corresponding to the above attributes .
     #handlers = {"NULL", "NULL", "http_message_start_handle", "http_generic_header_handle","http_headers_end_handle","http_data_handle","http_message_end_handle","NULL","NULL","NULL","NULL"}   
}

reconstruct-data tcp
{
	enable = false # Set to 1 to reconstruct tcp, 0 to disable it
    # Indicates the event.
    output-dir = "/opt/mmt/probe/files" # where to save the file
}

# socket configurations					
socket
{   enable = false # set to 1 to enable , 0 to disable :
    domain = 0 # 0 for Unix domain , 1 for Internet domain , and 2 for both :
    socket-descriptor = "/opt/mmt/probe/bin/" # required for UNIX domain . Folder location where socket file descriptor is created :
    port = {5000} # Required for Internet domain . If one-socket-server is set to 0 then the number of port addresses should be
				  # equal to the number of threads ( thread_nb ) . If one-socket-server is set to 1 , the number of port address
				  # should be only one :
    server-address = {"localhost"} # required for Internet domain . IP address of ip_host 1 ,ip_host 2..
    one-socket-server = 1 # If set to 0 the server contains multiple sockets to receive the reports . If set to 1 only one socket will receive the reports :
    num-of-report-per-msg = 1 # indicates the number of report per message ( sockets ) .Default is 1. 
} 

#This report is for  host1
security-report localhost{
    enable = false
    # Indicates the list of attributes that are reported when an event is triggered :
    attributes = {"ip.dst","ip.src","http.method"}
}

# This report is for security multi-session security : 
security-report-multisession remote{
    enable = false
    # indicates the list of attributes that are reported :
    attributes = { "nfs.file_name"}
    output-channel = {} # Reports are sent to the output channels . The default value is a file .
			# More than one output channel is possible . In this case , the value should be a set of comma - separated values ; for example : { redis , kafka , file, mongodb}.
			# Reports are sent to output channels only when the global parameters are enable ( file-output.enable = true ,redis-output.enable = true , kafka-output.enable = true, mongodb-output.enable = true)
}


# indicates the strategy for RADIUS reporting
radius-output
{
    enable = false
    include-msg = 0    # indicates the message one needs to report .
					   # set to 0 to report all messages .
					   # set to a number greater than 0 to indicate the message to report (1 for message , 2 for conditions ) :
    include-condition = 0  # indicates the condition to be met in order to report a message .
                       # condition set to 1 indicates that the report should be generated iff the IP to MSISDN mapping is present .
                       # this is the only supported condition for this version . Condition set to 0 to eliminate the condition .
											
    output-channel = {} # Reports are sent to the output channels . The default value is a file .
			# More than one output channel is possible . In this case , the value should be a set of comma - separated values ; for example : { redis , kafka , file, mongodb}.
			# Reports are sent to output channels only when the global parameters are enable ( file-output.enable = true ,redis-output.enable = true , kafka-output.enable = true, mongodb-output.enable = true)
}

data-output
{
    include-user-agent = 32 	# Indicates the threshold in terms of data volume for parsing the user agent in Web traffic.
				# The value is in kiloBytes ( kB ) . If the value is zero , this indicates that the parsing of the user agent should be done .
				# To disable the user agent parsing, set the threshold to a negative value (-1).

}

#Specifies the criteria to consider a flow as micro flow
micro-flows 
{ 
    enable = false 
    include-packet-count = 20     # packets count threshold to consider a flow as a micro flow :
    include-byte-count   = 20     # data volume threshold in KB to consider a flow as a micro flow :
    report-packet-count  = 10     # packets count threshold to report micro flows aggregated statistics :
    report-byte-count    = 10     # data volume threshold in KB to report micro flows aggregated statistics :
    report-flow-count    = 5      # Flows count threshold to report micro flows aggregated statistics :    
    output-channel = {} 	  # Reports are sent to the output channels . The default value is a file .
			# More than one output channel is possible . In this case , the value should be a set of comma - separated values ; for example : { redis , kafka , file, mongodb}.
			# Reports are sent to output channels only when the global parameters are enable ( file-output.enable = true ,redis-output.enable = true , kafka-output.enable = true, mongodb-output.enable = true)
}

# Specifies the session timeout time in seconds for different type of applications
session-timeout 
{ 
    default-session-timeout = 40 # 0 means default value = 60 seconds. For default session : 
    long-session-timeout = 0     # 0 means default value = 600 seconds. This is reasonable for Web and SSL connections especially when long polling is used . Usually applications have a long
								 # polling period of about 3~5 minutes .
    short-session-timeout = 0    # 0 means default value = 15 seconds . For short live sessions :
    live-session-timeout  = 0    # 0 means default value = 1500 seconds . For persistent connections like messaging applications and so on :  
}

# indicates session based reporting
session-report
{ 
    enable = true
    output-channel = {mongodb} # Reports are sent to the output channels . The default value is a file .
			# More than one output channel is possible . In this case , the value should be a set of comma - separated values ; for example : { redis , kafka , file, mongodb}.
			# Reports are sent to output channels only when the global parameters are enable ( file-output.enable = true ,redis-output.enable = true , kafka-output.enable = true, mongodb-output.enable = true)
	
	ftp = false
	http = false
	rtp = false
	ssl = false
	#gtp = false
}

# indicates event based reportinge
#session-report ip_event
#{ 
#    enable = false
#    attributes = {"meta.probe_id,meta.source_id,meta."} # Indicates the list of attributes that are reported when a event is triggered :
#    output-channel = {} # Reports are sent to the output channels . The default value is a file .
#			# More than one output channel is possible . In this case , the value should be a set of comma - separated values ; for example : { redis , kafka , file, mongodb}.
#			# Reports are sent to output channels only when the global parameters are enable ( file-output.enable = true ,redis-output.enable = true , kafka-output.enable = true, mongodb-output.enable = true)
#}

# indicates event based reporting
event-report ip_event
{ 
    enable = false
    event = "ip.src" # Indicates the event : 
    attributes = {"arp.ar_hln", "ip.src"} # Indicates the list of attributes that are reported when a event is triggered :
    output-channel = {} # Reports are sent to the output channels . The default value is a file .
			# More than one output channel is possible . In this case , the value should be a set of comma - separated values ; for example : { redis , kafka , file, mongodb}.
			# Reports are sent to output channels only when the global parameters are enable ( file-output.enable = true ,redis-output.enable = true , kafka-output.enable = true, mongodb-output.enable = true)
}

enable-proto-without-session-report = true
enable-ip-fragmentation-report = false 
stats-period = 5 # indicates the periodicity for reports : 
